import cv2
import time
import numpy as np
import RPi.GPIO as GPIO
GPIO.setwarnings(False)
# Setup GPIO
GPIO.setmode(GPIO.BOARD)
servo_pin = 18 # GPIO pin for servo
GPIO.setup(servo_pin, GPIO.OUT)
pwm = GPIO.PWM(servo_pin, 50) # PWM with frequency 50 Hz
pwm.start(0)
cap = cv2.VideoCapture(0)
# Set camera resolution
cap.set(3, 640)
cap.set(4, 480)
_, frame = cap.read()
rows, cols, _ = frame.shape
x_medium = int(cols / 2)
center = int(cols / 2)
position = 90 # degrees
while True:
_, frame = cap.read()
hsv_frame = cv2.cvtColor(frame, cv2.COLOR_BGR2HSV)
# red color
low_red = np.array([161, 155, 84])
high_red = np.array([179, 255, 255])
red_mask = cv2.inRange(hsv_frame, low_red, high_red)
contours, _ = cv2.findContours(red_mask,cv2.RETR_TREE,
cv2.CHAIN_APPROX_SIMPLE)
contours = sorted(contours, key=lambda x: cv2.contourArea(x),
reverse=True)
if len(contours) > 0:
cnt = contours[0]
(x, y, w, h) = cv2.boundingRect(cnt)
x_medium = int((x + x + w) / 2)
cv2.rectangle(frame, (x, y), (x + w, y + h), (0, 255, 0), 2)
else:
x_medium = center
cv2.line(frame, (x_medium, 0), (x_medium, 480), (0, 255, 0), 2)
# Move servo motor
if x_medium < center - 30:
position += 1.5
elif x_medium > center + 30:
position -= 1.5
# Adjust the position to fit within the valid range (0.0 to 100.0)
position = max(0, min(180, position))
pwm.ChangeDutyCycle(2 + (position / 18))
cv2.imshow("Frame", frame)
key = cv2.waitKey(1)
if key == 27:
break
# Cleanup GPIO
pwm.stop()
GPIO.cleanup()
cap.release()
cv2.destroyAllWindows()
