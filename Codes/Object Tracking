import cv2
import time
import numpy as np
cap = cv2.VideoCapture(0)
# Set camera resolution
cap.set(3, 640)
cap.set(4, 480)
_, frame = cap.read()
rows, cols, _ = frame.shape
x_medium = int(cols / 2)
center = int(cols / 2)
while True:
_, frame = cap.read()
hsv_frame = cv2.cvtColor(frame, cv2.COLOR_BGR2HSV)
# red color
low_red = np.array([161, 155, 84])
high_red = np.array([179, 255, 255])
red_mask = cv2.inRange(hsv_frame, low_red, high_red)
contours, _ = cv2.findContours(red_mask, cv2.RETR_TREE,
cv2.CHAIN_APPROX_SIMPLE)
contours = sorted(contours, key=lambda x: cv2.contourArea(x),
reverse=True)
if len(contours) > 0:
cnt = contours[0]
(x, y, w, h) = cv2.boundingRect(cnt)
x_medium = int((x + x + w) / 2)
cv2.rectangle(frame, (x, y), (x + w, y + h), (0, 255, 0), 2)
# Draw arrows
arrow_length = 50
arrow_thickness = 2
arrow_color = (0, 0, 0)
if x_medium < center - 30:
# Move right
arrow_end_x = int(x_medium + arrow_length)
arrow_end_y = int(y + h // 2)
cv2.arrowedLine(frame, (x_medium, y + h // 2), (arrow_end_x,
arrow_end_y), arrow_color, arrow_thickness)
elif x_medium > center + 30:
# Move left
arrow_end_x = int(x_medium - arrow_length)
arrow_end_y = int(y + h // 2)
cv2.arrowedLine(frame, (x_medium, y + h // 2), (arrow_end_x,
arrow_end_y), arrow_color, arrow_thickness)
if y < center - 30:
# Move down
arrow_end_x = int(x + w // 2)
arrow_end_y = int(y - arrow_length)
cv2.arrowedLine(frame, (x + w // 2, y), (arrow_end_x,
arrow_end_y), arrow_color, arrow_thickness)
elif y > center + 30:
# Move up
arrow_end_x = int(x + w // 2)
arrow_end_y = int(y + arrow_length)
cv2.arrowedLine(frame, (x + w // 2, y), (arrow_end_x,
arrow_end_y), arrow_color, arrow_thickness)
# Remove arrow at center
if abs(x_medium - center) <= 30 and abs(y - center) <= 30:
cv2.arrowedLine(frame, (center, center), (center, center),
(0, 0, 0), 2)
else:
x_medium = center
frame=cv2.flip(frame,1)
cv2.imshow("Frame", frame)
key = cv2.waitKey(1)
if key == 27:
break
# Cleanup GPIO
cap.release()
cv2.destroyAllWindows()
